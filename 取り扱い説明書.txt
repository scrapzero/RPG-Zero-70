# 「シーン」とは何か

　去年の数研ライブラリと、僕の数研ライブラリとでは、CSceneの使い方が完全に違う。
　使い方を説明する前に、「シーン」とは何か、考えてみよう

　シーンとは、ゲームにおける、場面のことを指す。
　RPGならば、タイトル、フィールド、戦闘などが挙げられる。
　これらは完全に処理が違うし、使う画像も変わるだろう。
　だから、シーンはそれぞれ別々にするべきだ。

　しかし、完全に分けるべきでないシーンも存在する。
　例えば、RPGにおけるメニュー画面だ。
　メニュー画面を開いても、フィールドの画像は表示されていることが多い。
　それを解決するためには、子シーンを使う。詳細は後述。

# シーンを書いてみる

　数研ライブラリにおけるすべてのシーンは、CSceneの継承クラスだ。
　MyScene.hに宣言を書き、[シーン名].cppに定義を書く。
　意味が分からないなら、次のように書けばいい。

　＜MyScene.h＞

　　class [シーン名]　:public CScene{
　　　/*変数宣言*/

　　　void Start();
　　　void Loop();
　　　void Draw();
　　　void End();
　　};

　＜[シーン名].cpp＞

　　void [シーン名]::Start(){
　　　/*初期化*/
　　}

　　void [シーン名]::Loop(){
　　　/*処理*/
　　}

　　void [シーン名]::Draw(){
　　　/*描画*/
　　}

　　void [シーン名]::End(){
　　　/*後処理(あまり使わない)*/
　　}

　　これで十分だ。

# シーン切り替えの方法

　＜Main.cpp＞では、初期シーンの設定をする。
　setting.InitScene(new CSTitle(),～);
　と書かれているのが、わかるだろうか。初期シーン設定はそこに書けばいいが、
　初期シーンがCSTitle以外であることは、ほとんどないと思われるので、
　あまり触ることはないだろう。シーンフリップアニメーションの設定もできる。詳細は後述。
　
　シーンを切り替えるときは、
　Game.FlipScene(new [シーン名]());
　と書けばいい。
　new　の意味が分かる必要はない。ただ上のように書けばいい。
　
# シーンフリップアニメーション

　InitScene()やFlipScene()ではシーン切り替えアニメーションの設定ができる。
　シーン切り替えアニメーションには大きく分けて二つある。
　１：僕が気合で作ったやつ。
　２：「ルール画像」を使うやつ。

　　##１の使い方

　　　引数は次の通りだ
　　　Game.FlipScene(new [シーン名](),Flip::[切り替えの種類],[速度]);
　　　効果についてはいろいろと試してもらいたい。
　　　「ルール画像」の準備がいらないので、楽な方法だ。

　　##２の使い方

　　　引数は次の通りだ
　　　Game.FlipScene(new [シーン名](),"ルール画像のパス",[速度]);
　　　もしくは、
　　　Game.FlipScene(new [シーン名](),"ルール画像のパス１","ルール画像のパス２",[速度]);
　　　何か足りない気もするが、使うことはほとんどないから気にしなくていい。
　　　詳しくは、「ルール画像」で検索すればいい。

# 子シーンについて




















